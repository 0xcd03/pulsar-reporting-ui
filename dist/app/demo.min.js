/*
 pulsar-reporting-ui | 0.2.0
 Copyright (C) 2012-2015 eBay Software Foundation
 Licenses: MIT & Apache 2.0
*/
!function(){"use strict";angular.module("pr.demo",["angular-loading-bar","ngAnimate","ui.router","pr.demo.realtime","pr.demo.traffic"]).config(function($stateProvider){$stateProvider.state("home.demo",{"abstract":!0,template:"<div ui-view></div>",url:"/demo",ncyBreadcrumb:{label:"Demo"},data:{pageTitle:"Demo"},menu:{name:"Demo",icon:"fa fa-dot-circle-o",tag:"sidebar",priority:100}})})}(),function(){"use strict";angular.module("pr.demo.realtime",["ui.router","ui.grid","ui.grid.selection","ui.grid.pagination","ui.grid.autoResize","pr.gridextensions","pr.api","pr.UIOption","pr.dashboard.widgets.metric","pr.dashboard.widgets.timeline","pr.dashboard.widgets.grid","pr.dashboard.widgets.pie","pr.datasource.sql"]).config(function($stateProvider){$stateProvider.state("home.demo.realtime",{url:"/realtime?trafficsource&osfamily&devicefamily&country",views:{"":{templateUrl:"src/demo/realtime/realtime.html",controller:"RealtimeController"},"filters@home.demo.realtime":{templateUrl:"src/demo/realtime/realtimeFilters.html",controller:"RealtimeFiltersController"},"metric@home.demo.realtime":{templateUrl:"src/demo/realtime/realtimeMetric.html",controller:"RealtimeMetricController"},"trend@home.demo.realtime":{templateUrl:"src/demo/realtime/realtimeTrend.html",controller:"RealtimeTrendController"},"grid@home.demo.realtime":{templateUrl:"src/demo/realtime/realtimeGrid.html",controller:"RealtimeGridController"},"info-box@home.demo.realtime":{templateUrl:"src/demo/realtime/realtimeInfoBox.html",controller:"RealtimeInfoBoxController"},"ratio@home.demo.realtime":{templateUrl:"src/demo/realtime/realtimeRatio.html",controller:"RealtimeRatioController"},"distribution@home.demo.realtime":{templateUrl:"src/demo/realtime/realtimeDistribution.html",controller:"RealtimeDistributionController"}},ncyBreadcrumb:{label:"Realtime"},data:{pageTitle:"Realtime"},menu:{name:"Realtime",icon:"fa fa-dashboard",tag:"sidebar",priority:100}})}).controller("RealtimeController",function($state,$stateParams,$scope,$interval,$window,prApi,$filter){$scope.refresh={active:!1,restartOnFocus:!1,intervals:[],rates:{realtime:10,fast:60,medium:300,slow:900}},$scope.setRefresh=function(refresh,force){if(refresh)angular.forEach($scope.refresh.rates,function(rateSeconds,rate){force&&$scope.$broadcast("refresh-"+rate);var interval=$interval(function(){$scope.$broadcast("refresh-"+rate)},1e3*rateSeconds);$scope.refresh.intervals.push(interval),$scope.refresh.active=!0});else{for(;$scope.refresh.intervals.length>0;)$interval.cancel($scope.refresh.intervals.pop());$scope.refresh.active=!1}},$scope.setRefresh(!0),angular.element($window).bind("blur.realtimeRefresh",function(){$scope.refresh.active&&($scope.setRefresh(!1),$scope.refresh.restartOnFocus=!0)}).bind("focus.realtimeRefresh",function(){$scope.refresh.restartOnFocus&&($scope.setRefresh(!0,!0),$scope.refresh.restartOnFocus=!1)}),$scope.$on("$destroy",function(){$scope.setRefresh(!1),angular.element($window).unbind("blur.realtimeRefresh"),angular.element($window).unbind("focus.realtimeRefresh")}),$scope.getFilter=function(params){var stateParams=angular.copy($stateParams);return angular.merge({},stateParams,params||{})},$scope.lastFiveMinutesIntervals=function(){return $filter("intervalDate")(moment().subtract(5,"minutes"))+"/"+$filter("intervalDate")(moment())},$scope.lastTwoDaysIntervals=function(){return moment().tz(prApi.timezone).subtract(1,"day").startOf("day").format("YYYY-MM-DD HH:mm:ss")+"/"+$filter("intervalDate")(moment().tz(prApi.timezone).startOf("hour"))},$scope.filters={intervals:$scope.lastFiveMinutesIntervals(),where:$scope.getFilter()},$scope.$on("refresh-realtime",function(){$scope.filters.intervals=$scope.lastFiveMinutesIntervals()}),$scope.$watch("filters.where",function(newVal,oldVal){$state.go(".",newVal)},!0)}).controller("RealtimeFiltersController",function($scope,$state,$stateParams){$scope.$state=$state,$scope.$stateParams=$stateParams}).controller("RealtimeMetricController",function($scope,prApi,$filter){$scope.params={dataSourceName:"trackingdruid",table:"pulsar_event",granularity:"all",metrics:[{name:"count",type:"sum",alias:"total events"}]},$scope.options={title:"Total Events",description:"In the last 5 minutes",subDescription:"Retrieved at "+moment().tz(prApi.timezone).format("h:mm A"),disabled:!1,icon:"fa fa-heartbeat"},$scope.$on("refresh-realtime",function(){$scope.options.subDescription="Retrieved at "+moment().tz(prApi.timezone).format("h:mm A")})}).controller("RealtimeTrendController",function($scope,prApi,$filter){$scope.params={dataSourceName:"trackingdruid",table:"pulsar_event",granularity:"hour",metrics:[{name:"count",type:"sum",alias:"today events"}],maxResults:100},$scope.filters={intervals:$scope.lastTwoDaysIntervals(),where:$scope.getFilter()},$scope.options={title:"Total Events",disabled:!1,isArea:!0,chart:{height:120,yAxis:{tickFormat:function(n){return $filter("number")(n,0)}}}},$scope.transformData=function(data,param){for(var i=moment().tz(prApi.timezone).startOf("day").subtract(1,"days").subtract(1,"hours"),timeRange=[];moment().tz(prApi.timezone).startOf("hour").diff(i)>0;)timeRange.push(i),i=i.add(1,"hours").clone();var yesterdayValues={area:!0,key:"yesterday events",values:[]},todayValues={area:!0,key:"today events",values:[]};angular.forEach(timeRange,function(val,index){var count=0;angular.forEach(data[0].values,function(point){0===val.diff(point.x)&&(count=point.y)}),24>index?yesterdayValues.values.push({x:val.add(1,"days"),y:count}):todayValues.values.push({x:val,y:count})});var results=[];return results.push(yesterdayValues),results.push(todayValues),results},$scope.$on("refresh-slow",function(){$scope.filters.intervals=$scope.lastTwoDaysIntervals()})}).controller("RealtimeGridController",function($scope,prApi){$scope.params={dataSourceName:"trackingdruid",table:"pulsar_event",granularity:"all",dimensions:[{name:"trafficsource"}],metrics:[{name:"count",type:"sum",alias:"event count"}],maxResults:100},$scope.options={title:"Traffic Source",disabled:!1}}).controller("RealtimeInfoBoxController",function($scope,prDatasourceSqlService,prApi){$scope.params={dataSourceName:"trackingdruid",table:"pulsar_event",granularity:"all",dimensions:[{name:"devicefamily"}],metrics:[{name:"count",type:"sum",alias:"count"}],maxResults:100,filters:$scope.filters},$scope.loadInfoBox=function(){prDatasourceSqlService.getDataset({dataSourceName:$scope.params.dataSourceName},$scope.params,function(data){var newData=[],total=0;data.forEach(function(point){newData[point.devicefamily]=point.count,total+=point.count}),newData.total=total,$scope.deviceFamily=newData})},$scope.updateDeviceFilter=function(type){$scope.filters.where.devicefamily=type},$scope.loadInfoBox()}).controller("RealtimeRatioController",function($scope,prApi){$scope.params={dataSourceName:"trackingdruid",table:"pulsar_event",granularity:"all",dimensions:[{name:"osfamily"}],metrics:[{name:"count",type:"sum",alias:"events"}],maxResults:10},$scope.options={title:"OS Ratio",disabled:!1,chart:{height:315,margin:{top:-40,right:-30,bottom:-20,left:-30}}}}).controller("RealtimeDistributionController",function($scope,prApi,$filter){$scope.params={dataSourceName:"trackingdruid",table:"pulsar_event",granularity:"all",dimensions:[{name:"country"},{name:"devicefamily"}],metrics:[{name:"count",type:"sum",alias:"event count"}],maxResults:20},$scope.options={title:"Events Distribution",disabled:!1,chart:{yAxis:{tickFormat:function(n){return $filter("number")(n,0)}}}}})}(),function(){"use strict";angular.module("pr.demo.traffic",["ui.router","ui.bootstrap","ui.grid","ui.grid.selection","ui.grid.pagination","ui.grid.autoResize","pr.gridextensions","pr.UIOption","pr.dashboard.widgets.stack","pr.date","pr.dynamicfilter"]).config(function($stateProvider){$stateProvider.state("home.demo.traffic",{url:"/traffic?dynamicFilters&granularity&start&end&filterCollapse",views:{"":{templateUrl:"src/demo/traffic/traffic.html",controller:"TrafficController"},"filter@home.demo.traffic":{templateUrl:"src/demo/traffic/trafficFilters.html",controller:"TrafficFilterController"},"trend@home.demo.traffic":{templateUrl:"src/demo/traffic/trafficTrend.html",controller:"TrafficTrendController"},"grid@home.demo.traffic":{templateUrl:"src/demo/traffic/trafficDetail.html",controller:"TrafficGridController"}},params:{start:{value:function(prApi){return moment().tz(prApi.timezone).startOf("day").subtract(1,"weeks").format("X")},squash:!1},end:{value:function(prApi){return moment().tz(prApi.timezone).endOf("day").subtract(1,"days").format("X")},squash:!1},granularity:"day",filterCollapse:"collapsed"},ncyBreadcrumb:{label:"Traffic"},data:{pageTitle:"Traffic Demo"},menu:{name:"Traffic",icon:"fa fa-cubes",tag:"sidebar",priority:99}})}).controller("TrafficController",function($state,$stateParams,$scope,$filter){$scope.$state=$state,$scope.$stateParams=$stateParams,$scope.changeDateRange=function(start,end){$scope.$state.go(".",{start:start,end:end})},$scope.dynamicFilters={},$scope.$stateParams.dynamicFilters&&($scope.dynamicFilters=angular.fromJson($scope.$stateParams.dynamicFilters)),$scope.$on("compareDevice",function(event,args){$scope.$broadcast("displayCompare",{devicefamily:args.devicefamily})}),$scope.$on("legendChange",function(event,args){$scope.$broadcast("toggleDeviceSelection",{devicename:args.devicename})}),$scope.$on("legendSelectAll",function(event,args){$scope.$broadcast("selectAllDevice")}),$scope.basicFilters={intervals:$filter("intervalDate")($scope.$state.params.start)+"/"+$filter("intervalDate")($scope.$state.params.end)},$scope.filters={intervals:$filter("intervalDate")($scope.$state.params.start)+"/"+$filter("intervalDate")($scope.$state.params.end),where:$scope.dynamicFilters},$scope.removeFilter=function(dimensionName,dimVal){var dimValIndex=$scope.dynamicFilters[dimensionName].indexOf(dimVal);$scope.dynamicFilters[dimensionName].splice(dimValIndex,1),$state.go(".",{dynamicFilters:angular.toJson($scope.dynamicFilters)})},$scope.removeAllFilters=function(dimensionName){$scope.dynamicFilters[dimensionName]=[],$state.go(".",{dynamicFilters:angular.toJson($scope.dynamicFilters)})}}).controller("TrafficFilterController",function($scope,$location){$scope.dataSourceName="trackingdruid",$scope.table="pulsar_session",$scope.dimensions=[{name:"osfamily",locked:!0},{name:"browserfamily",locked:!0},{name:"devicefamily",locked:!0},{name:"trafficsource",locked:!0}],$scope.metric={name:"count",type:"sum",alias:"total"};var dynamicFilters=$scope.$stateParams.dynamicFilters;dynamicFilters&&($scope.model=angular.fromJson(dynamicFilters)),$scope.submitEvent="applyFilters",$scope.$on($scope.submitEvent,function(e,params){$scope.$state.go(".",{dynamicFilters:angular.toJson(params)})}),$scope.isCollapsed=$scope.$stateParams.filterCollapse,$scope.toggleCollapse=function(){$scope.isCollapsed="collapsed"==$scope.isCollapsed?"open":"collapsed",$scope.$stateParams.filterCollapse=$scope.isCollapsed,$scope.$state.params.filterCollapse=$scope.isCollapsed,$location.search("filterCollapse",$scope.isCollapsed)}}).controller("TrafficTrendController",function($scope,prUIOptionService,prApi,$filter,$location){$scope.options={disabled:!1,chart:{xAxis:{axisLabel:"Time"},yAxis:{tickFormat:function(n){return $filter("number")(n,0)}},sytle:$scope.chartStyle||"stack",dispatch:{stateChange:function(t,u){$scope.chartStyle=t.style}},showLegend:!0,legend:{dispatch:{legendClick:function(t,u){$scope.$emit("legendChange",{devicename:t.key})},stateChange:function(t,u){var selectAll=!0;angular.forEach(t.disabled,function(val){val&&(selectAll=!1)}),selectAll&&$scope.$emit("legendSelectAll")}}}}},$scope.changeGranularity=function(granularity){$scope.$stateParams.granularity=granularity,$scope.$state.params.granularity=granularity,$scope.options.chart.style=$scope.chartStyle,$location.search("granularity",granularity),$scope.params.granularity=granularity},$scope.$on("displayCompare",function(event,args){var devicefamily=args.devicefamily;0===devicefamily.length?($scope.params.dimensions=[],$scope.options.display=void 0):($scope.params.dimensions=[{name:"devicefamily"}],$scope.options.display=devicefamily)}),$scope.transformData=function(data,param){return $scope.options.display&&$scope.options.display.length&&angular.forEach(data,function(val,index){$scope.options.display.indexOf(val.key)<0?data[index].disabled=!0:data[index].disabled=!1}),data},$scope.params={dataSourceName:"trackingdruid",table:"pulsar_session",granularity:$scope.$stateParams.granularity,dimensions:[],metrics:[{name:"count",type:"sum",alias:"total"}],maxResults:100}}).controller("TrafficGridController",function($scope,prUIOptionService){$scope.options={disabled:!1},$scope.options.grid=prUIOptionService.getGridOptions({enableRowSelection:!0,multiSelect:!0,columnDefs:[{field:"devicefamily",displayName:"Device Family",cellTemplate:'<div class="ui-grid-cell-contents"><a href title="{{COL_FIELD}}" ng-click="grid.appScope.addFilter(\'devicefamily\', [grid.getCellValue(row, col)])">{{COL_FIELD}}</a></div>'},{field:"count",displayName:"Sessions",width:"30%",cellFilter:"number",cellClass:"text-right"},{field:"sessionduration_ag",displayName:"Avg. Session Duration",width:"30%",cellFilter:"duration",cellClass:"text-right"}],onRegisterApi:function(gridApi){gridApi.selection.on.rowSelectionChanged($scope,function(row,event){event&&$scope.refreshChart(gridApi)}),gridApi.selection.on.rowSelectionChangedBatch($scope,function(){gridApi.grid.selection.selectAll?(gridApi.grid.selection.selectAll=!1,gridApi.selection.clearSelectedRows()):(gridApi.selection.selectAllRows(),gridApi.grid.selection.selectAll=!0),$scope.refreshChart(gridApi)}),$scope.gridApi=gridApi}}),$scope.params={dataSourceName:"trackingdruid",table:"pulsar_session",granularity:"all",dimensions:[{name:"devicefamily"}],metrics:[{name:"count",type:"sum",alias:"count"},{name:"sessionduration_ag",type:"avg",alias:"sessionduration_ag"}],maxResults:100},$scope.refreshChart=function(gridApi){var devicefamily=[];angular.forEach(gridApi.selection.getSelectedRows(),function(selected){devicefamily.push(selected.devicefamily)}),$scope.$emit("compareDevice",{devicefamily:devicefamily})},$scope.$on("toggleDeviceSelection",function(event,args){window.onresize=null,angular.forEach($scope.gridApi.grid.rows,function(row){row.entity.devicefamily===args.devicename&&($scope.gridApi.selection.toggleRowSelection(row.entity),$scope.$apply())})}),$scope.$on("selectAllDevice",function(event,args){window.onresize=null,$scope.gridApi.selection.selectAllRows(),$scope.gridApi.grid.selection.selectAll=!0,$scope.$apply()}),$scope.$watch("filters.where",function(newWhere,oldWhere){if(!angular.equals(newWhere,oldWhere)){var dynamicFilters=$scope.$stateParams.dynamicFilters?angular.fromJson($scope.$stateParams.dynamicFilters):{};angular.forEach(newWhere,function(value,key){angular.isArray(value)?dynamicFilters[key]=value:value&&(dynamicFilters[key]=[value])}),$scope.$state.go(".",{dynamicFilters:angular.toJson(dynamicFilters)})}},!0)})}();
//# sourceMappingURL=demo.min.js.map